{"version":3,"sources":["components/BarChart.tsx","components/CountryListItem.tsx","components/CountryList.tsx","styles/NavBarStyles.ts","components/NavBar.tsx","styles/Themes.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useChartStyles","makeStyles","barWrapper","maxWidth","margin","options","scales","yAxes","ticks","beginAtZero","BarChart","country","classes","className","type","data","labels","datasets","label","Number","replaceAll","backgroundColor","borderColor","borderWidth","useRowStyles","root","borderBottom","CountryListItem","props","useState","open","setOpen","TableRow","TableCell","IconButton","aria-label","size","onClick","component","scope","Country_text","align","style","paddingBottom","paddingTop","colSpan","Collapse","in","timeout","unmountOnExit","Box","CountryList","filteredCountries","TableContainer","Paper","Table","TableHead","TableBody","map","idx","useNavStyles","theme","createStyles","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","fade","palette","common","white","marginLeft","width","inputRoot","color","inputInput","padding","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","NavBar","countries","setFilteredCountries","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","setSearch","isMobileMenuOpen","Boolean","mobileMenuId","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","id","keepMounted","transformOrigin","onClose","MenuItem","Badge","badgeContent","useEffect","newCountries","filter","startsWith","updateCountries","AppBar","Toolbar","Typography","variant","noWrap","InputBase","value","onChange","event","target","placeholder","input","inputProps","aria-controls","aria-haspopup","currentTarget","createMuiTheme","overrides","MuiCssBaseline","html","WebkitFontSmoothing","App","undefined","setCountries","axios","request","method","url","headers","then","response","catch","error","console","ThemeProvider","CssBaseline","Grid","container","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41c3d7f5.chunk.js","sourcesContent":["import { Bar } from \"react-chartjs-2\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { Country } from \"../types\";\r\n\r\nconst useChartStyles = makeStyles({\r\n  barWrapper: {\r\n    maxWidth: \"60%\",\r\n    margin: \"auto\",\r\n  },\r\n});\r\n\r\nconst options = {\r\n  scales: {\r\n    yAxes: [\r\n      {\r\n        ticks: {\r\n          beginAtZero: true,\r\n        },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\ninterface Props {\r\n  country: Country;\r\n}\r\n\r\nconst BarChart: React.FC<Props> = ({ country }) => {\r\n  const classes = useChartStyles();\r\n\r\n  const generateChartData = () => {\r\n    return {\r\n      labels: [\r\n        \"Total Cases\",\r\n        \"Total Deaths\",\r\n        \"Total Recovered\",\r\n        \"Active Cases\",\r\n        \"New Cases\",\r\n        \"New Deaths\",\r\n      ],\r\n      datasets: [\r\n        {\r\n          label: \"Covid Stats\",\r\n          data: [\r\n            Number(country[\"Total Cases_text\"].replaceAll(',', \"\")),\r\n            Number(country[\"Total Deaths_text\"].replaceAll(',', \"\")),\r\n            Number(country[\"Total Recovered_text\"].replaceAll(',', \"\")),\r\n            Number(country[\"Active Cases_text\"].replaceAll(',', \"\")),\r\n            Number(country[\"New Cases_text\"].replaceAll(',', \"\",)),\r\n            Number(country[\"New Deaths_text\"].replaceAll(',', \"\")),\r\n          ],\r\n          backgroundColor: [\r\n            \"rgba(255, 99, 132, 0.2)\",\r\n            \"rgba(54, 162, 235, 0.2)\",\r\n            \"rgba(255, 206, 86, 0.2)\",\r\n            \"rgba(75, 192, 192, 0.2)\",\r\n            \"rgba(153, 102, 255, 0.2)\",\r\n            \"rgba(255, 159, 64, 0.2)\",\r\n          ],\r\n          borderColor: [\r\n            \"rgba(255, 99, 132, 1)\",\r\n            \"rgba(54, 162, 235, 1)\",\r\n            \"rgba(255, 206, 86, 1)\",\r\n            \"rgba(75, 192, 192, 1)\",\r\n            \"rgba(153, 102, 255, 1)\",\r\n            \"rgba(255, 159, 64, 1)\",\r\n          ],\r\n          borderWidth: 1,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className={classes.barWrapper}>\r\n      <Bar type=\"bar\" data={generateChartData()} options={options} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChart;\r\n","import { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core\";\r\nimport { TableCell, TableRow, IconButton, Collapse, Box } from \"@material-ui/core\";\r\n\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport { Country } from \"../types\";\r\nimport BarChart from \"./BarChart\";\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {\r\n    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst CountryListItem = (props: { country: Country }) => {\r\n  const { country } = props;\r\n  const [open, setOpen] = useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={classes.root}>\r\n        <TableCell>\r\n          <IconButton aria-label=\"expand row\" size=\"small\" onClick={() => setOpen(!open)}>\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n        </TableCell>\r\n        <TableCell component=\"th\" scope=\"row\">\r\n          {country.Country_text}\r\n        </TableCell>\r\n        <TableCell align=\"right\">{country[\"Total Cases_text\"]}</TableCell>\r\n        <TableCell align=\"right\">{country[\"Total Deaths_text\"]}</TableCell>\r\n        <TableCell align=\"right\">{country[\"Total Recovered_text\"]}</TableCell>\r\n        <TableCell align=\"right\">{country[\"Active Cases_text\"]}</TableCell>\r\n        <TableCell align=\"right\">{country[\"New Cases_text\"]}</TableCell>\r\n        <TableCell align=\"right\">{country[\"New Deaths_text\"]}</TableCell>\r\n      </TableRow>\r\n      <TableRow>\r\n        <TableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={8}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n                <BarChart country={country}/>\r\n            </Box>\r\n          </Collapse>\r\n        </TableCell>\r\n      </TableRow>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CountryListItem;\r\n","import React from \"react\";\r\nimport { TableContainer, Paper, Table, TableHead, TableCell, TableRow, TableBody } from \"@material-ui/core\";\r\nimport CountryListItem from \"./CountryListItem\";\r\nimport { Country } from \"../types\";\r\n\r\ninterface Props {\r\n  filteredCountries: Country[] \r\n}\r\n\r\nconst CountryList: React.FC<Props> = ({filteredCountries}) => {\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"collapsible table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell />\r\n            <TableCell>Country</TableCell>\r\n            <TableCell align=\"right\">Total Cases</TableCell>\r\n            <TableCell align=\"right\">Total Deaths</TableCell>\r\n            <TableCell align=\"right\">Total Recovered</TableCell>\r\n            <TableCell align=\"right\">Acrive Cases</TableCell>\r\n            <TableCell align=\"right\">New Cases</TableCell>\r\n            <TableCell align=\"right\">New Deaths</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filteredCountries.map((country,idx) => (\r\n            <CountryListItem key={idx} country={country} />\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n\r\nexport default CountryList;","import { makeStyles, Theme, createStyles, fade } from \"@material-ui/core\";\r\n\r\nexport const useNavStyles = makeStyles((theme: Theme) =>\r\n  createStyles({\r\n    grow: {\r\n      flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n      marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('sm')]: {\r\n        display: 'block',\r\n      },\r\n    },\r\n    search: {\r\n      position: 'relative',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: fade(theme.palette.common.white, 0.15),\r\n      '&:hover': {\r\n        backgroundColor: fade(theme.palette.common.white, 0.25),\r\n      },\r\n      marginRight: theme.spacing(2),\r\n      marginLeft: 0,\r\n      width: '100%',\r\n      [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n      },\r\n    },\r\n    inputRoot: {\r\n      color: 'inherit',\r\n    },\r\n    inputInput: {\r\n      padding: theme.spacing(1, 1, 1, 0),\r\n      // vertical padding + font size from searchIcon\r\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\r\n      transition: theme.transitions.create('width'),\r\n      width: '100%',\r\n      [theme.breakpoints.up('md')]: {\r\n        width: '20ch',\r\n      },\r\n    },\r\n    sectionDesktop: {\r\n      display: 'none',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'flex',\r\n      },\r\n    },\r\n    sectionMobile: {\r\n      display: 'flex',\r\n      [theme.breakpoints.up('md')]: {\r\n        display: 'none',\r\n      },\r\n    },\r\n  }),\r\n);","import React, { useEffect, useState } from \"react\";\r\nimport { AppBar, Badge, IconButton, InputBase, Menu, MenuItem, Toolbar, Typography } from \"@material-ui/core\";\r\nimport MailIcon from '@material-ui/icons/Mail';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport MoreIcon from '@material-ui/icons/MoreVert';\r\nimport { useNavStyles } from \"../styles/NavBarStyles\";\r\nimport { Country } from \"../types\";\r\n\r\ninterface Props {\r\n    countries: Country[] | undefined,\r\n    setFilteredCountries: React.Dispatch<React.SetStateAction<Country[] | undefined>>\r\n}\r\n\r\nconst NavBar: React.FC<Props> = ({countries, setFilteredCountries}) => {\r\n  const classes = useNavStyles();\r\n  const [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  const [search, setSearch] = useState<string>(\"\");\r\n\r\n  const isMobileMenuOpen = Boolean(mobileMoreAnchorEl);\r\n\r\n  const handleMobileMenuClose = () => {\r\n    setMobileMoreAnchorEl(null);\r\n  };\r\n\r\n  const handleMobileMenuOpen = (event: React.MouseEvent<HTMLElement>) => {\r\n    setMobileMoreAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleSearchChange = (event: { target: { value: React.SetStateAction<string>; }; }) => {\r\n    setSearch(event.target.value);\r\n  }\r\n\r\n  const mobileMenuId = 'primary-search-account-menu-mobile';\r\n  const renderMobileMenu = (\r\n    <Menu\r\n      anchorEl={mobileMoreAnchorEl}\r\n      anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      id={mobileMenuId}\r\n      keepMounted\r\n      transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n      open={isMobileMenuOpen}\r\n      onClose={handleMobileMenuClose}\r\n    >\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n          <Badge badgeContent={4} color=\"secondary\">\r\n            <MailIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Messages</p>\r\n      </MenuItem>\r\n      <MenuItem>\r\n        <IconButton aria-label=\"show 11 new notifications\" color=\"inherit\">\r\n          <Badge badgeContent={11} color=\"secondary\">\r\n            <NotificationsIcon />\r\n          </Badge>\r\n        </IconButton>\r\n        <p>Notifications</p>\r\n      </MenuItem>\r\n    </Menu>\r\n  );\r\n\r\n  useEffect(() => {\r\n      const updateCountries = () => {\r\n        if(countries) {\r\n            let newCountries:Country[] = countries.filter(country => country.Country_text && country.Country_text.startsWith(search));\r\n            setFilteredCountries(newCountries);\r\n        }\r\n      }\r\n\r\n      updateCountries();\r\n  }, [search])\r\n\r\n  return (\r\n    <div className={classes.grow}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <Typography className={classes.title} variant=\"h6\" noWrap>\r\n            CovidLator\r\n          </Typography>\r\n          <div className={classes.search}>\r\n            <InputBase\r\n              value={search}\r\n              onChange={handleSearchChange}\r\n              placeholder=\"Search…\"\r\n              classes={{\r\n                root: classes.inputRoot,\r\n                input: classes.inputInput,\r\n              }}\r\n              inputProps={{ 'aria-label': 'search' }}\r\n            />\r\n          </div>\r\n          <div className={classes.grow} />\r\n          <div className={classes.sectionDesktop}>\r\n            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n              <Badge badgeContent={4} color=\"secondary\">\r\n                <MailIcon />\r\n              </Badge>\r\n            </IconButton>\r\n            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n              <Badge badgeContent={17} color=\"secondary\">\r\n                <NotificationsIcon />\r\n              </Badge>\r\n            </IconButton>\r\n          </div>\r\n          <div className={classes.sectionMobile}>\r\n            <IconButton\r\n              aria-label=\"show more\"\r\n              aria-controls={mobileMenuId}\r\n              aria-haspopup=\"true\"\r\n              onClick={handleMobileMenuOpen}\r\n              color=\"inherit\"\r\n            >\r\n              <MoreIcon />\r\n            </IconButton>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n      {renderMobileMenu}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import { createMuiTheme } from \"@material-ui/core\";\r\n\r\nexport const theme = createMuiTheme({\r\n  overrides: {\r\n    MuiCssBaseline: {\r\n      '@global': {\r\n        html: {\r\n          WebkitFontSmoothing: 'auto',\r\n        },\r\n      },\r\n    },\r\n  },\r\n});","import React, { useState, useEffect } from \"react\";\nimport { CssBaseline, Grid, ThemeProvider } from \"@material-ui/core\";\nimport axios, { AxiosRequestConfig } from \"axios\";\nimport type { Country } from \"./types\";\nimport CountryList from \"./components/CountryList\";\nimport NavBar from \"./components/NavBar\";\nimport { theme } from \"./styles/Themes\";\n\nconst App: React.FC = () => {\n  const [countries, setCountries] = useState<Country[] | undefined>(undefined);\n  const [filteredCountries, setFilteredCountries] = useState<Country[] | undefined>(undefined);\n\n  useEffect(() => {\n    const fetchData = () => {\n      const options: AxiosRequestConfig = {\n        method: 'GET',\n        url: 'https://covid-19-tracking.p.rapidapi.com/v1',\n        headers: {\n          'x-rapidapi-key': '776f35a2b1msh7ee7661e018052cp167240jsn8761e9bc5163',\n          'x-rapidapi-host': 'covid-19-tracking.p.rapidapi.com'\n        }\n      };\n\n      axios.request(options).then((response) => {\n\t      setCountries(response.data);\n\t      setFilteredCountries(response.data);\n      }).catch((error) => {\n\t      console.error(error);\n      });\n    }\n\n    fetchData();\n  }, []);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline />\n        <NavBar countries={countries} setFilteredCountries={setFilteredCountries} />\n        <Grid container>\n          {filteredCountries ? \n            <CountryList filteredCountries={filteredCountries} />\n            : \n            <h1>loading...</h1>}\n        </Grid> \n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}